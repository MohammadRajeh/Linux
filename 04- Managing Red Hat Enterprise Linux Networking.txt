Default Network interface names:
========================================================
* Ethernet interfaces begin with en, WLAN interfaces begin with wl, and WWAN interfaces
    with WW
* The next character(s) represent the type of adapter with an o for on-based, s for hotplug slot,
    and p for PCI.
* A number N is used to represent an index, ID, or port.
* If the fixed name can not be determined, the traditional names such as ethN will be used.

Example:
- eno1, the first embedded network interface
-enp2s0, a PCI card networking interface
======================================================================
Displaying IP addresses:
# ifconfig 
# ifconfig  eno1677
# ip addr77736
# ip help help
# ip addr
# ip addr show 
# ip addr show eno167777736
# ip link show 
# ip -s link show 
# ip -s link show eno167777736
=======================================================================
Configuration IP addresses:
=======================================================================
# ifconfig eno167777736 192.168.1.10 netmask 255.255.255.0
 -Note: Prefix will be the default if not configured.
# ip addr add dev eno167777736 192.168.1.10/24                (Appears as a secondary IP)
-Note: Prefix will be /32 if not configured.
========================================================================
Configuring Networking with nmcli:
========================================================================
# nmcli 
# nmcli help
# nmcli con show 
# nmcli con show eno167777736
# nmcli connection add con-name testing ifname eno167777736 type ethernet ipv4 192.168.10.10/24
# nmcli connection down eno167777736
# nmcli connection up testing
- If the testing connection is lost, the eno167777736 connection will attempt to autoconnect. To 
 administratively disable an interface and prevent any auto connection, use nmcli dev disconnect 
 DEVICENAME.

 # nmcli con mod eno167777736 connection.autoconnect no (Turn off auto connection)
 # nmcli con mod eno167777736 ipv4.dns 8.8.8.8  (configure a DNS server)
 # nmcli con mod eno167777736 +ipv4.dns 8.8.4.4  (add another DNS server)
 # nmcli con mod eno167777736  +ipv4.address 10.0.0.1/24  (Add secondary address)
 # nmcli con mod eno167777736 ipv4.method manual ipv4.address 192.168.1.10/24
  ipv4.gateway 192.168.1.1 ipc4.dns 8.8.8.8

 - The nmcli con mod will save the setting to the configuration files. To activate the changes, the
  connection needs to be activated or reactivated.
  # nm-connection-editor                              (GUI Version of nmcli)

 ========================================================================
 Configuring Networking with nmtui:
 ========================================================================
 # nmtui
 # nmcli con down eno167777736 ; nmcli con up testing
 # vim /etc/sysconfig/network-scripts/ifcfg-testing
 # nmcli connection reload eno167777736
# nmcli connection up testing
 # ifconfig
========================================================================
Configuring Host Names:
# hostname
# hostname master.redhat.com
# vim /ets/hostname
# vim /etc/hostname
# hostnamectl                                    (Display iformation about the system)
# hostnamectl status                             (Display iformation about the system)
# hostnamectl set-hostname www.coderz.com


The static host name is stored in /etc/hostname. Previous versions of RHEL stored the hostname as
a variable in the /etc/sysconfig/network file.
========================================================================
Configure DNS: 
 # vim /etc/sysconfig/network-scripts/ifcfg-testing
 DNS1=8.8.8.8
# nmcli con mod eno167777736 ipv4.dns 8.8.8.8  (configure a DNS server)
# nmcli con mod eno167777736 +ipv4.dns 8.8.4.4  (Add another  DNS server)
# vim /etc/host
========================================================================
Configure Routing:
========================================================================
#route -n                              (Display routing table)
# ip route                             (Display routing table)
# ip route    show                     (Display routing table)
# ip route add 20.0.0.0/8 via 192.168.1.1     (Add a static route)
# vim /etc/sysconfig/network-scripts/ifcfg-eno167777736 
GATEWAY=192.168.1.1
# nmcli con mod eno167777736 ipv4.gateway 192.168.1.1
========================================================================
Network tools:
# ping -c 5 127.0.0.1
# netstat -i                      (Packet information)
# netstat -tulpen                 (Listening ports)
# traceroute 8.8.8.8
=========================================================================
